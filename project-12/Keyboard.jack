// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Keyboard.jack
/**
 * A library for handling user input from the keyboard.
 */
class Keyboard {

	/** Initializes the keyboard. */
	function void init() {
		return;
	} 

	/**
	 * Returns the character of the currently pressed key on the keyboard;
	 * if no key is currently pressed, returns 0.
	 *
	 * Recognizes all ASCII characters, as well as the following keys:
	 * new line = 128 = String.newline()
	 * backspace = 129 = String.backspace()
	 * left arrow = 130
	 * up arrow = 131
	 * right arrow = 132
	 * down arrow = 133
	 * home = 134
	 * End = 135
	 * page up = 136
	 * page down = 137
	 * insert = 138
	 * delete = 139
	 * ESC = 140
	 * F1 - F12 = 141 - 152
	 */
	function char keyPressed() {
		return Memory.peek(24576);
	}

	/**	Waits until a key is pressed on the keyboard and released,
	 *  then echoes the key to the screen, and returns the character 
	 *  of the pressed key. */
	function char readChar() {
		var char c;
		var char x;

		do Output.backSpace();
		do Output.printChar(0);

		let c = 0;

		while (c = 0) {
			let c = Keyboard.keyPressed();
		}

		let x = c;

		while (x > 0) {
			let x = Keyboard.keyPressed();
		}

		do Output.backSpace();
		do Output.printChar(c);
		do Output.printChar(0);

		return c;
	}

	/**	Displays the message on the screen, reads from the keyboard the entered
	 *  text until a newline character is detected, echoes the text to the screen,
	 *  and returns its value. Also handles user backspaces. */
	function String readLine(String message) {
		var String result;
		var boolean done;
		var char c;

		do Output.printString(message);

		let result = String.new(100);
		let done = false;

		while (~done) {
			let c = Keyboard.readChar();

			if (c = 128) {
				do Output.println();
				let done = true;
			}
			else {
				if (c = 129) {
					do result.eraseLastChar();
				}
				else {
					let result = result.appendChar(c);
				}
			}
		}
		
		return result;
	}   

	/** Displays the message on the screen, reads from the keyboard the entered
	 *  text until a newline character is detected, echoes the text to the screen,
	 *  and returns its integer value (until the first non-digit character in the
	 *  entered text is detected). Also handles user backspaces. */
	function int readInt(String message) {
		var String text;

		let text = Keyboard.readLine(message);

		return text.intValue();
	}
}
